<?php

/**
 * This is the model base class for the table "tbl_query".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Query".
 *
 * Columns in table "tbl_query" available as properties of the model,
 * followed by relations of table "tbl_query" available as properties of the model.
 *
 * @property string $id
 * @property string $wiki_id
 * @property string $entity_id
 * @property integer $frequency
 * @property string $text
 * @property integer $attributes_count
 * @property string $semantic_type
 * @property string $fbid
 *
 * @property Statement[] $statements
 */
abstract class BaseQuery extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_query';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Query|Queries', $n);
	}

	public static function representingColumn() {
		return 'wiki_id';
	}

	public function rules() {
		return array(
			array('wiki_id, entity_id, frequency, text, attributes_count, semantic_type', 'required'),
			array('frequency, attributes_count', 'numerical', 'integerOnly'=>true),
			array('wiki_id, entity_id, text, semantic_type', 'length', 'max'=>255),
			array('fbid', 'length', 'max'=>63),
			array('fbid', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, wiki_id, entity_id, frequency, text, attributes_count, semantic_type, fbid', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'statements' => array(self::HAS_MANY, 'Statement', 'query'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'wiki_id' => Yii::t('app', 'Wiki'),
			'entity_id' => Yii::t('app', 'Entity'),
			'frequency' => Yii::t('app', 'Frequency'),
			'text' => Yii::t('app', 'Text'),
			'attributes_count' => Yii::t('app', 'Attributes Count'),
			'semantic_type' => Yii::t('app', 'Semantic Type'),
			'fbid' => Yii::t('app', 'Fbid'),
			'statements' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('wiki_id', $this->wiki_id, true);
		$criteria->compare('entity_id', $this->entity_id, true);
		$criteria->compare('frequency', $this->frequency);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('attributes_count', $this->attributes_count);
		$criteria->compare('semantic_type', $this->semantic_type, true);
		$criteria->compare('fbid', $this->fbid, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}